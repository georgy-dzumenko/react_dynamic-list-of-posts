{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/posts.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectPostId","selectedPostId","className","map","post","userId","title","type","onClick","id","BASE_URL","getUserPosts","a","fetch","then","response","json","result","data","getPostComments","postId","getPostDetails","addComment","method","headers","body","JSON","stringify","deleteComment","NewCommentForm","onCommentAdd","useState","userName","setUserName","userEmail","setUserEmail","commentText","setCommentText","onSubmit","event","preventDefault","required","onChange","target","value","name","placeholder","PostDetails","setPost","comments","setComments","visibility","setVisibility","useEffect","fetchData","email","curVisibility","comment","App","selectedPosts","selectPostsId","ReactDOM","render","document","getElementById"],"mappings":"iWAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,eAAxB,OACvB,yBAAKC,UAAU,aACb,sCAEA,wBAAIA,UAAU,mBAEVH,EAAMI,KAAI,SAAAC,GAAI,OACZ,wBAAIF,UAAU,mBACZ,6BACE,qCAEGE,EAAKC,OAFR,KAIG,KAEFD,EAAKE,OAER,4BACEC,KAAK,SACLL,UAAU,2BACVM,QAAS,WACHP,IAAmBG,EAAKK,GAM5BT,EAAaI,EAAKK,IALhBT,EAAa,KASfC,IAAmBG,EAAKK,GACpB,QACA,gB,sBCrCPC,EAAW,iCCEXC,EAAY,uCAAG,WAAMN,GAAN,eAAAO,EAAA,sEAGpBC,MAAM,GAAD,OAAIH,EAAJ,iBACE,IAAXL,EAAA,kBACeA,GACX,KACHS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACC,GACLE,EAAM,YAAOF,EAASG,SATA,gCAYnBD,GAZmB,2CAAH,sDAeZE,EAAe,uCAAG,WAAMC,GAAN,eAAAR,EAAA,sEAGvBC,MAAM,GAAD,OAAIH,EAAJ,4BAAgCU,IACxCN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACC,GACLE,EAAM,YAAOF,EAASG,SANG,gCAStBD,GATsB,2CAAH,sDAYfI,EAAc,uCAAG,WAAMZ,GAAN,eAAAG,EAAA,sEAGtBC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBD,IAC9BK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACC,GACLE,EAASF,EAASG,QANM,gCASrBD,GATqB,2CAAH,sDAYdK,EAAU,uCAAG,WAAMJ,GAAN,SAAAN,EAAA,sEAClBC,MAAM,GAAD,OAAIH,EAAJ,aAAyB,CAClCa,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAL,eACDT,MAPiB,2CAAH,sDAYVU,EAAa,uCAAG,WAAMnB,GAAN,SAAAG,EAAA,sEACrBC,MAAM,GAAD,OAAIH,EAAJ,qBAAyBD,GAAM,CACxCc,OAAQ,WAFiB,2CAAH,sDC/CbM,EAAiB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC/B,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,qBAAtC,mBAAOK,EAAP,KAAoBC,EAApB,KAEA,OACE,0BACEC,SAAU,SAACC,GACTA,EAAMC,iBACNV,EAAa,CACXE,WAAUE,YAAWE,gBAEvBC,EAAe,KAEjBnC,UAAU,kBAEV,yBAAKA,UAAU,cACb,2BACEuC,UAAQ,EACRC,SACE,SAACH,GACCN,EAAYM,EAAMI,OAAOC,QAG7BrC,KAAK,OACLsC,KAAK,OACLC,YAAY,YACZ5C,UAAU,2BAId,yBAAKA,UAAU,cACb,2BACEuC,UAAQ,EACRC,SACE,SAACH,GACCJ,EAAaI,EAAMI,OAAOC,QAG9BrC,KAAK,OACLsC,KAAK,QACLC,YAAY,aACZ5C,UAAU,2BAId,yBAAKA,UAAU,cACb,8BACEuC,UAAQ,EACRG,MAAOR,EACPM,SACE,SAACH,GACCF,EAAeE,EAAMI,OAAOC,QAGhCC,KAAK,OACLC,YAAY,oBACZ5C,UAAU,2BAId,4BACEK,KAAK,SACLL,UAAU,wCAFZ,mBCxDO6C,G,MAAc,SAAC,GAAgB,IAAd3B,EAAa,EAAbA,OAC5B,EAAwBW,mBAAS,IAAjC,mBAAO3B,EAAP,KAAa4C,EAAb,KACA,EAAgCjB,mBAAS,IAAzC,mBAAOkB,EAAP,KAAiBC,EAAjB,KACA,EAAoCnB,oBAAS,GAA7C,mBAAOoB,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WAAM,4CACd,sBAAAzC,EAAA,kEACEoC,EADF,SACgB3B,EAAeD,GAD/B,8CAEE8B,EAFF,SAEoB/B,EAAgBC,GAFpC,+EADc,uBAAC,WAAD,wBAMdkC,KACC,CAAClC,IAEJ,IAAMU,EAAY,uCAAG,iCAAAlB,EAAA,6DACnBoB,EADmB,EACnBA,SACAE,EAFmB,EAEnBA,UACAE,EAHmB,EAGnBA,YAHmB,SAKbd,EAAW,CACfF,SACAyB,KAAMb,EACNuB,MAAOrB,EACPT,KAAMW,IATW,mBAWnBc,EAXmB,SAWD/B,EAAgBC,GAXf,6EAAH,sDAclB,OACE,yBAAKlB,UAAU,eACb,6CAEA,6BAASA,UAAU,qBACjB,2BAAIE,EAAKqB,OAGX,6BAASvB,UAAU,yBACjB,4BACEK,KAAK,SACLL,UAAU,SACVM,QAAS,WACP4C,GAAc,SAAAI,GAAa,OAAKA,OAGjCL,EAAa,OAAS,OACtB,IARH,YAYA,wBACEjD,UAAS,4BAAwBiD,EAAwB,GAAX,WAG5CF,EAAS9C,KAAI,SAAAsD,GAAO,OAClB,wBAAIvD,UAAU,0BACZ,4BACEM,QAAO,sBAAE,sBAAAI,EAAA,sEACDgB,EAAc6B,EAAQhD,IADrB,mBAEPyC,EAFO,SAEW/B,EAAgBC,GAF3B,6EAITb,KAAK,SACLL,UAAU,qCANZ,KAUA,2BAAIuD,EAAQhC,YAOtB,iCACE,yBAAKvB,UAAU,6BACb,kBAAC,EAAD,CACE4B,aAAcA,SCnBX4B,EA5DH,WACV,MAAuC3B,mBAAS,IAAhD,mBAAO4B,EAAP,KAAsBC,EAAtB,KACA,EAAuC7B,mBAAS,GAAhD,mBAAO9B,EAAP,KAAuBD,EAAvB,KAUA,OARAqD,qBAAU,WAAM,4CACd,sBAAAzC,EAAA,kEACEgD,EADF,SACsBjD,EAAa,GADnC,8EADc,uBAAC,WAAD,wBAKd2C,KACC,IAGD,yBAAKpD,UAAU,OACb,4BAAQA,UAAU,eAChB,qDAGE,4BACEA,UAAU,qBACVwC,SAAQ,uCAAE,WAAMH,GAAN,SAAA3B,EAAA,kEACRgD,EADQ,SACYjD,GAAc4B,EAAMI,OAAOC,OADvC,6EAAF,uDAIR,4BAAQA,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,iBACA,4BAAQA,MAAO,GAAf,gBACA,4BAAQA,MAAO,GAAf,oBACA,4BAAQA,MAAO,GAAf,oBACA,4BAAQA,MAAO,GAAf,oBACA,4BAAQA,MAAO,GAAf,wBACA,4BAAQA,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,4BACA,4BAAQA,MAAO,GAAf,mBACA,4BAAQA,MAAO,IAAf,oBAKN,0BAAM1C,UAAU,aACd,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEH,MAAO4D,EACP3D,aAAcA,EACdC,eAAgBA,KAKC,IAAnBA,EACE,yBAAKC,UAAU,gBACb,kBAAC,EAAD,CAAakB,OAAQnB,KAErB,MCvDd4D,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.a34b89bd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, selectPostId, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {\n        posts.map(post => (\n          <li className=\"PostsList__item\">\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                if (selectedPostId === post.id) {\n                  selectPostId(0);\n\n                  return;\n                }\n\n                selectPostId(post.id);\n              }}\n            >\n              {\n                selectedPostId === post.id\n                  ? 'Close'\n                  : 'Open'\n              }\n            </button>\n          </li>\n        ))\n      }\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape(),\n  ).isRequired,\n  selectPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  let result;\n\n  await fetch(`${BASE_URL}/posts${\n    userId !== 0\n      ? `?userId=${userId}`\n      : ''}`)\n    .then(response => response.json())\n    .then((response) => {\n      result = [...response.data];\n    });\n\n  return result;\n};\n\nexport const getPostComments = async(postId) => {\n  let result;\n\n  await fetch(`${BASE_URL}/comments?postId=${postId}`)\n    .then(response => response.json())\n    .then((response) => {\n      result = [...response.data];\n    });\n\n  return result;\n};\n\nexport const getPostDetails = async(id) => {\n  let result;\n\n  await fetch(`${BASE_URL}/posts/${id}`)\n    .then(response => response.json())\n    .then((response) => {\n      result = response.data;\n    });\n\n  return result;\n};\n\nexport const addComment = async(data) => {\n  await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      ...data,\n    }),\n  });\n};\n\nexport const deleteComment = async(id) => {\n  await fetch(`${BASE_URL}/comments/${id}`, {\n    method: 'DELETE',\n  });\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\n\nimport { } from '../../api/posts';\n\nexport const NewCommentForm = ({ onCommentAdd }) => {\n  const [userName, setUserName] = useState();\n  const [userEmail, setUserEmail] = useState();\n  const [commentText, setCommentText] = useState();\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        onCommentAdd({\n          userName, userEmail, commentText,\n        });\n        setCommentText('');\n      }}\n      className=\"NewCommentForm\"\n    >\n      <div className=\"form-field\">\n        <input\n          required\n          onChange={\n            (event) => {\n              setUserName(event.target.value);\n            }\n          }\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          required\n          onChange={\n            (event) => {\n              setUserEmail(event.target.value);\n            }\n          }\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          required\n          value={commentText}\n          onChange={\n            (event) => {\n              setCommentText(event.target.value);\n            }\n          }\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  onCommentAdd: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport {\n  getPostDetails,\n  getPostComments,\n  addComment,\n  deleteComment,\n} from '../../api/posts';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [visibility, setVisibility] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      setPost(await getPostDetails(postId));\n      setComments(await getPostComments(postId));\n    }\n\n    fetchData();\n  }, [postId]);\n\n  const onCommentAdd = async({\n    userName,\n    userEmail,\n    commentText,\n  }) => {\n    await addComment({\n      postId,\n      name: userName,\n      email: userEmail,\n      body: commentText,\n    });\n    setComments(await getPostComments(postId));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setVisibility(curVisibility => !curVisibility);\n          }}\n        >\n          {visibility ? 'Hide' : 'Show'}\n          {' '}\n          comments\n        </button>\n\n        <ul\n          className={`PostDetails__list ${!visibility ? 'hidden' : ''}`}\n        >\n          {\n            comments.map(comment => (\n              <li className=\"PostDetails__list-item\">\n                <button\n                  onClick={async() => {\n                    await deleteComment(comment.id);\n                    setComments(await getPostComments(postId));\n                  }}\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))\n          }\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            onCommentAdd={onCommentAdd}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [selectedPosts, selectPostsId] = useState([]);\n  const [selectedPostId, selectPostId] = useState(0);\n\n  useEffect(() => {\n    async function fetchData() {\n      selectPostsId(await getUserPosts(0));\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={async(event) => {\n              selectPostsId(await getUserPosts(+event.target.value));\n            }}\n          >\n            <option value={0}>All users</option>\n            <option value={1}>Leanne Graham</option>\n            <option value={2}>Ervin Howell</option>\n            <option value={3}>Clementine Bauch</option>\n            <option value={4}>Patricia Lebsack</option>\n            <option value={5}>Chelsey Dietrich</option>\n            <option value={6}>Mrs. Dennis Schulist</option>\n            <option value={7}>Kurtis Weissnat</option>\n            <option value={8}>Nicholas Runolfsdottir V</option>\n            <option value={9}>Glenna Reichert</option>\n            <option value={10}>Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={selectedPosts}\n            selectPostId={selectPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        {\n          selectedPostId !== 0 ? (\n            <div className=\"App__content\">\n              <PostDetails postId={selectedPostId} />\n            </div>\n          ) : ''\n        }\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}